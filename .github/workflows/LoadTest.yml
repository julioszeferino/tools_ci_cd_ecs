name: Teste de Carga

on:
  workflow_call:

jobs:

  loadtest:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/setup-go@v3 

    - name: configurando credenciais da AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    
    # realizando o clone do repositorio com a infra
    # para o caso de ele estar em outro lugar
    # - run: git clone repositorio-infra

    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
    
    - run: terraform -chdir=infra_CI/env/Homolog init

    - run: terraform -chdir=infra_CI/env/Homolog destroy -auto-approve

    - run: terraform -chdir=infra_CI/env/Homolog apply -auto-approve
      
    # recuperando a saida
    - run: echo "$(terraform -chdir=infra_CI/env/Homolog apply output -raw IP_alb)"
      id: URL
    
    # executando teste de carga com o locust
    # instalando o locust no python com pip
    - name: Setup Python
      uses: actions/setup-python@v2.3.3
      with:
        python-version: "3.10"

    - uses: BSFishy/pip-action@v1
      with:
        packages: |
          locust
    
    # configurando o arquivo locustfile pra executar requisicoes na rota /bruno
    # cada 'usuario' vai esperar entre 1 a 5 segundos para fazer uma serie de requisicoes
    - run: |
        echo "from locust import HttpUser, TaskSet, task, between" >> locustfile.py
        echo "" >> locustfile.py
        echo "class UserTasks(TaskSet):" >> locustfile.py
        echo "	@task(1)" >> locustfile.py
        echo "	def index(self):" >> locustfile.py
        echo '		self.client.get("/bruno")' >> locustfile.py
        echo "" >> locustfile.py
        echo "class WebsiteUser(HttpUser):" >> locustfile.py
        echo "	tasks = [UserTasks]" >> locustfile.py
        echo "	wait_time = between(1, 5)" >> locustfile.py
    
    # -f: arquivo do locust
    # --headles: executar em segundo plano
    # -u: quantidade de usuarios simulados
    # -r: quantidade requisicoes por usuario
    # --runtime: tempo do teste de carga
    # -H: endereco url da aplicacao, vamos buscar do output do ID do step da linha 35
    - name: Roda teste de carga
      run: sleep 60s ; locust -f locustfile.py --headless -u 10 -r 5 --run-time 60s -H http://${{ steps.URL.outputs.stdout }}

    - run: terraform -chdir=Infra_CI/env/Homolog destroy -auto-approve

        

